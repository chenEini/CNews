{"version":3,"sources":["services/articles.service.js","components/article/Article.js","services/category.service.js","components/article/ArticleList.js","components/category/Category.js","components/category/CategoryList.js","components/article/AddArticle.js","components/management/Management.js","components/article/ArticlePage.js","App.js","serviceWorker.js","index.js"],"names":["ArticlesService","category","startDate","endDate","getTime","fetch","this","articlesUrl","then","res","json","catch","err","console","log","id","title","content","data","method","headers","body","JSON","stringify","window","location","origin","Article","props","article","useState","articleDate","setArticleDate","useEffect","created_at","to","categoryName","views","CategoriesService","categoriesUrl","ArticleList","articles","setArticles","categories","setCategories","categorySearch","setCategorySearch","startDateSearch","setStartDateSearch","endDateSearch","setEndDateSearch","getArticles","getCategories","length","search","event","isClear","Date","setHours","className","value","onChange","target","map","c","index","key","name","type","placeholder","e","onClick","a","Category","CategoryList","newCategoryName","setNewCategory","i","addCategory","newCategory","AddArticle","newArticleTitle","setNewArticleTitle","newArticleContent","setNewArticleContent","newArticleCategory","setNewArticleCategory","disabled","addArticle","Management","style","path","ArticlePage","articleId","useParams","setArticle","getArticle","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d7369000.chunk.js","sourcesContent":["export class ArticlesService {\n\tstatic articlesUrl = `${window.location.origin}/api/articles`;\n\n\tstatic getArticles(category = '', startDate = '', endDate = '') {\n\t\tif (startDate) {\n\t\t\tstartDate = startDate.getTime();\n\t\t}\n\n\t\tif (endDate) {\n\t\t\tendDate = endDate.getTime();\n\t\t}\n\n\t\treturn fetch(`${this.articlesUrl}?category=${category}&startDate=${startDate}&endDate=${endDate}`)\n\t\t\t.then(res => res.json())\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\t}\n\n\tstatic getArticle(id: string) {\n\t\treturn fetch(`${this.articlesUrl}/${id}`)\n\t\t\t.then(res => res.json())\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tstatic addArticle(title: string, content: string, category: string) {\n\t\tconst data = { title, content, category };\n\t\treturn fetch(this.articlesUrl, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(data)\n\t\t}).then(res => res.json())\n            .catch(err => {\n                console.log(err);\n            })\n\t}\n}\n","import React, {useEffect, useState} from 'react';\nimport {Link} from \"react-router-dom\";\n\nfunction Article(props) {\n    const {article} = props;\n    const [articleDate, setArticleDate] = useState(\"\");\n    const lambdaUrl = 'https://3t0d39gku3.execute-api.us-east-1.amazonaws.com/production/dateformatting';\n\n    useEffect(() => {\n        fetch(`${lambdaUrl}?articleDate=${article.created_at}`)\n            .then(res => setArticleDate(res.json()))\n            .catch(err => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <div>\n            <header>\n                <Link to={`/articles/${article.id}`}>{article.title} | {article.categoryName}</Link>\n            </header>\n            <footer>\n                {articleDate ? (`${articleDate} |`) : ''} {article.views} views\n            </footer>\n        </div>\n    )\n}\n\nexport default Article;\n","export class CategoriesService {\n    static categoriesUrl = `${window.location.origin}/api/categories`;\n\n    static getCategories() {\n        return fetch(this.categoriesUrl)\n            .then(res => res.json())\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    static addCategory(category) {\n        return fetch(this.categoriesUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(category)\n        })\n            .then(res => res.json())\n            .catch(err => {\n                console.log(err);\n            })\n    }\n}\n","import React, {useEffect, useState} from 'react';\nimport {ArticlesService} from '../../services/articles.service';\nimport Article from './Article'\nimport {CategoriesService} from \"../../services/category.service\";\n\nfunction ArticleList() {\n    const [articles, setArticles] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [categorySearch, setCategorySearch] = useState('');\n\tconst [startDateSearch, setStartDateSearch] = useState(null);\n\tconst [endDateSearch, setEndDateSearch] = useState(null);\n\n\tconst getArticles = (category, startDate, endDate) => {\n\t\tArticlesService.getArticles(category, startDate, endDate)\n\t\t\t.then(data => {\n\t\t\t\tsetArticles(data)\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err)\n\t\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tgetArticles();\n\t}, []);\n\n    useEffect(() => {\n\t    CategoriesService.getCategories()\n\t\t    .then(data => {\n\t\t\t    setCategories(data)\n\t\t    })\n\t\t    .catch(err => {\n\t\t\t    console.log(err)\n\t\t    });\n    }, [categories.length]);\n\n    const onCategoryChange = (event) => {\n    \tsetCategorySearch(event.target.value);\n    };\n\n    const search = (event, isClear = false) => {\n\t    let startDate = '';\n\t    let endDate = '';\n\n\t    if (isClear) {\n\t    \tgetArticles('', '', '');\n\t    \treturn;\n\t    }\n\n    \tif (startDateSearch) {\n\t        startDate = new Date(startDateSearch);\n\t    }\n\n\t    if (endDateSearch) {\n\t        endDate = new Date(endDateSearch);\n\t        endDate.setHours(23, 59, 59, 999);\n\t    }\n\n\t    getArticles(categorySearch, startDate, endDate);\n    };\n\n    const clearSearch = () => {\n        setCategorySearch('');\n        setStartDateSearch(null);\n        setEndDateSearch(null);\n\n        search(null, true)\n    };\n\n    return (\n        <div className=\"article-list\">\n\t        <div className=\"search\">\n\t\t\t\t<div className=\"category-search\">\n\t\t\t\t\t<select value={categorySearch} id=\"category\" onChange={onCategoryChange}>\n\t\t\t\t\t\t<option value={''}>All</option>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcategories.map((c, index) => <option value={c.id} key={index} >{c.name}</option>)\n\t\t\t\t\t\t}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t        <div className=\"dates-search\">\n\t\t\t        <input id=\"startDate\" type=\"date\" placeholder=\"Enter start date\" onChange={e => setStartDateSearch(e.target.value)}/>\n\t\t\t        <input id=\"endDate\" type=\"date\" placeholder=\"Enter end date\" onChange={e => setEndDateSearch(e.target.value)}/>\n\t\t        </div>\n\t\t        <button onClick={search}>Search</button>\n\t\t        <button onClick={clearSearch}>Clear</button>\n\t        </div>\n\n\t        <div className=\"content\">\n\t            {\n\t                articles.map((a, index) => (<Article key={index} article={a}/>))\n\t            }\n\t        </div>\n        </div>\n    )\n}\n\nexport default ArticleList;\n","import React from 'react';\n\nfunction Category(props) {\n    const {category} = props;\n\n    return (<div>{category.name}</div>);\n}\n\nexport default Category;","import React, {useEffect, useState} from 'react';\nimport {CategoriesService} from '../../services/category.service';\nimport Category from './Category'\n\nfunction CategoryList() {\n    const [categories, setCategories] = useState([]);\n    const [newCategoryName, setNewCategory] = useState('');\n\n    useEffect(() => {\n        CategoriesService.getCategories()\n            .then(data => {\n                setCategories(data)\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    }, []);\n\n    const addCategory = () => {\n        if (newCategoryName) {\n            CategoriesService.addCategory({ name: newCategoryName }).then((newCategory) => {\n                setCategories([...categories, newCategory]);\n                setNewCategory('')\n            }).catch(console.log);\n        }\n    };\n\n    const onCategoryNameChange = (event) => {\n        setNewCategory(event.target.value);\n    };\n\n    return (\n        <div>\n            <div>\n                <span>categories list:</span>\n            </div>\n            <br/>\n            <div className=\"category-list\">\n                {\n                    categories.map((c, i) => (<Category key={i} category={c}/>))\n                }\n            </div>\n            <div>\n                <input value={newCategoryName} onChange={onCategoryNameChange}/>\n                <button onClick={addCategory}>Add category</button>\n            </div>\n        </div>\n    )\n}\n\nexport default CategoryList;\n","import React, { useEffect, useState } from 'react';\nimport { CategoriesService } from \"../../services/category.service\";\nimport { ArticlesService } from \"../../services/articles.service\";\n\nfunction AddArticle() {\n    const [categories, setCategories] = useState([]);\n    const [newArticleTitle, setNewArticleTitle] = useState('');\n    const [newArticleContent, setNewArticleContent] = useState('');\n    const [newArticleCategory, setNewArticleCategory] = useState(-1);\n\n    useEffect(() => {\n        CategoriesService.getCategories()\n            .then(data => {\n                setCategories(data)\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    }, []);\n\n    const onTitleChange = (event) => {\n        setNewArticleTitle(event.target.value);\n    };\n\n    const onContentChange = (event) => {\n        setNewArticleContent(event.target.value);\n    };\n\n    const onCategoryChange = (event) => {\n        setNewArticleCategory(event.target.value);\n    };\n\n    const addArticle = () => {\n        if (!newArticleTitle || !newArticleContent || !newArticleCategory) {\n            return;\n        }\n\n        ArticlesService.addArticle(newArticleTitle, newArticleContent, newArticleCategory).then(() => {\n            console.log('New article was added');\n        }).catch(console.log);\n    };\n\n    const renderCategoryOptions = () => categories.map((c, i) =>\n        (<option key={i} value={c.id}>{c.name}</option>));\n\n    return (\n        <div>\n            <div>Add Article:</div>\n            <div>\n                <input value={newArticleTitle} onChange={onTitleChange} name=\"title\" placeholder=\"Enter title\" />\n                <textarea value={newArticleContent} onChange={onContentChange} name=\"content\" placeholder=\"Enter content\" />\n                <select value={newArticleCategory} onChange={onCategoryChange} name=\"category\">\n                    <option disabled value={-1}>Choose category</option>\n                    {renderCategoryOptions()}\n                </select>\n            </div>\n            <button onClick={addArticle}>Add</button>\n        </div>\n    );\n}\n\nexport default AddArticle;\n","import React from 'react';\nimport {\n    Switch,\n    Route,\n    Link,\n} from \"react-router-dom\";\nimport CategoryList from \"../category/CategoryList\";\nimport AddArticle from \"../article/AddArticle\";\n\nfunction Management() {\n    return (\n        <div>\n            <ul style={{'marginLeft': '20px'}}>\n                <li>\n                    <Link to={'/management/articles'}>Manage Articles</Link>\n                </li>\n                <li>\n                    <Link to={'/management/categories'}>Manage Categories</Link>\n                </li>\n            </ul>\n            <Switch>\n                <Route path={'/management/articles'}>\n                    <AddArticle/>\n                </Route>\n                <Route path={'/management/categories'}>\n                    <CategoryList/>\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default Management;\n","import React, { useEffect, useState } from 'react';\nimport {\n  useParams\n} from \"react-router-dom\";\nimport { ArticlesService } from \"../../services/articles.service\";\n\nfunction ArticlePage() {\n    let { articleId } = useParams();\n    const [article, setArticle] = useState(null);\n\n    useEffect(() => {\n        ArticlesService.getArticle(articleId).then((article) => {\n            setArticle(article)\n        }).catch(console.log);\n    }, [articleId]);\n\n    return (\n    \t!article ? null :\n        <div>\n            <header>\n                {article.title} | {article.categoryName}\n            </header>\n            <article>\n                {article.content}\n            </article>\n            <footer>\n                {article.created_at} | {article.views} views\n            </footer>\n        </div>\n    )\n}\n\nexport default ArticlePage;\n","import React from \"react\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport ArticleList from \"./components/article/ArticleList\";\nimport Management from \"./components/management/Management\";\nimport ArticlePage from \"./components/article/ArticlePage\";\n\nexport default function App() {\n    return (\n        <Router>\n            <div>\n                <nav>\n                    <ul>\n                        <li>\n                            <Link to=\"/articles\">Articles</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/management\">Management Login</Link>\n                        </li>\n                    </ul>\n                </nav>\n\n                <Switch>\n                    <Route path={'/articles/:articleId'}>\n                        <ArticlePage/>\n                    </Route>\n                    <Route path=\"/articles\">\n                        <ArticleList/>\n                    </Route>\n                    <Route path=\"/management\">\n                        <Management/>\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}