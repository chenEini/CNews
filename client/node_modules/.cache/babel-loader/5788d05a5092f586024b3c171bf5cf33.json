{"ast":null,"code":"import _classCallCheck from\"/Users/cheneini/Documents/chen-degree/cloud/cnews/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cheneini/Documents/chen-degree/cloud/cnews/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";export var ArticlesService=/*#__PURE__*/function(){function ArticlesService(){_classCallCheck(this,ArticlesService);}_createClass(ArticlesService,null,[{key:\"getArticles\",value:function getArticles(){var category=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var startDate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';var endDate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';if(startDate){startDate=startDate.getTime();}if(endDate){endDate=endDate.getTime();}return fetch(\"\".concat(this.articlesUrl,\"?category=\").concat(category,\"&startDate=\").concat(startDate,\"&endDate=\").concat(endDate)).then(function(res){return res.json();}).catch(function(err){console.log(err);});}},{key:\"getArticle\",value:function getArticle(id){return fetch(\"\".concat(this.articlesUrl,\"/\").concat(id)).then(function(res){return res.json();}).catch(function(err){console.log(err);});}},{key:\"addArticle\",value:function addArticle(title,content,category){var data={title:title,content:content,category:category};return fetch(this.articlesUrl,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(res){return res.json();}).catch(function(err){console.log(err);});}}]);return ArticlesService;}();ArticlesService.articlesUrl=\"\".concat(location.origin,\"/api/articles\");","map":{"version":3,"sources":["/Users/cheneini/Documents/chen-degree/cloud/cnews/server/client/src/services/articles.service.js"],"names":["ArticlesService","category","startDate","endDate","getTime","fetch","articlesUrl","then","res","json","catch","err","console","log","id","title","content","data","method","headers","body","JSON","stringify","location","origin"],"mappings":"0WAAA,UAAaA,CAAAA,eAAb,6KAGiE,IAA7CC,CAAAA,QAA6C,2DAAlC,EAAkC,IAA9BC,CAAAA,SAA8B,2DAAlB,EAAkB,IAAdC,CAAAA,OAAc,2DAAJ,EAAI,CAC/D,GAAID,SAAJ,CAAe,CACdA,SAAS,CAAGA,SAAS,CAACE,OAAV,EAAZ,CACA,CAED,GAAID,OAAJ,CAAa,CACZA,OAAO,CAAGA,OAAO,CAACC,OAAR,EAAV,CACA,CAED,MAAOC,CAAAA,KAAK,WAAI,KAAKC,WAAT,sBAAiCL,QAAjC,uBAAuDC,SAAvD,qBAA4EC,OAA5E,EAAL,CACLI,IADK,CACA,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADH,EAELC,KAFK,CAEC,SAAAC,GAAG,CAAI,CACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,CAJK,CAAP,CAKA,CAjBF,8CAmBmBG,EAnBnB,CAmB+B,CAC7B,MAAOT,CAAAA,KAAK,WAAI,KAAKC,WAAT,aAAwBQ,EAAxB,EAAL,CACLP,IADK,CACA,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADH,EAELC,KAFK,CAEC,SAAAC,GAAG,CAAI,CACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,CAJK,CAAP,CAKA,CAzBF,8CA2BmBI,KA3BnB,CA2BkCC,OA3BlC,CA2BmDf,QA3BnD,CA2BqE,CACnE,GAAMgB,CAAAA,IAAI,CAAG,CAAEF,KAAK,CAALA,KAAF,CAASC,OAAO,CAAPA,OAAT,CAAkBf,QAAQ,CAARA,QAAlB,CAAb,CACA,MAAOI,CAAAA,KAAK,CAAC,KAAKC,WAAN,CAAmB,CAC9BY,MAAM,CAAE,MADsB,CAE9BC,OAAO,CAAE,CACR,eAAgB,kBADR,CAFqB,CAK9BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CALwB,CAAnB,CAAL,CAMJV,IANI,CAMC,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EANJ,EAOIC,KAPJ,CAOU,SAAAC,GAAG,CAAI,CACVC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CATJ,CAAP,CAUA,CAvCF,+BAAaX,e,CACLM,W,WAAiBiB,QAAQ,CAACC,M","sourcesContent":["export class ArticlesService {\n\tstatic articlesUrl = `${location.origin}/api/articles`;\n\n\tstatic getArticles(category = '', startDate = '', endDate = '') {\n\t\tif (startDate) {\n\t\t\tstartDate = startDate.getTime();\n\t\t}\n\n\t\tif (endDate) {\n\t\t\tendDate = endDate.getTime();\n\t\t}\n\n\t\treturn fetch(`${this.articlesUrl}?category=${category}&startDate=${startDate}&endDate=${endDate}`)\n\t\t\t.then(res => res.json())\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\t}\n\n\tstatic getArticle(id: string) {\n\t\treturn fetch(`${this.articlesUrl}/${id}`)\n\t\t\t.then(res => res.json())\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tstatic addArticle(title: string, content: string, category: string) {\n\t\tconst data = { title, content, category };\n\t\treturn fetch(this.articlesUrl, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(data)\n\t\t}).then(res => res.json())\n            .catch(err => {\n                console.log(err);\n            })\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}